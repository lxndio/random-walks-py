class DynamicProgram:
    """
    A simple dynamic program.
    """

    def __new__(cls, time_limit: int, kernel: 'Kernel', kernels: list['Kernel'], field_types: list[list[int]]=[]) -> 'DynamicProgram': ...
    def at(self, x: int, y: int, t: int) -> float: ...
    def at_or(self, x: int, y: int, t: int, default: float) -> float:
    def set(self, x: int, y: int, t: int, val: float): ...
    @staticmethod
    def load(filename: str) -> 'DynamicProgram': ...
    def limits(self) -> tuple[int, int]: ...
    def compute(self): ...
    def field_types(self) -> list[list[int]]: ...
    def heatmap(self, path: str, t: int): ...
    def print(self, t: int): ...
    def save(self, filename: str): ...
    def __repr__(self) -> str: ...
    def __eq__(self, other) -> bool: ...
